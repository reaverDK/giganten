<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<!-- CONTROL BACKGROUND -->
	<SolidColorBrush x:Key="ButtonBaseColor" Color="#FF80E000"></SolidColorBrush>
	<SolidColorBrush x:Key="ButtonFocusColor" Color="#FF90F000"></SolidColorBrush>
	<SolidColorBrush x:Key="ExitFocusColor" Color="White"></SolidColorBrush>
	<SolidColorBrush x:Key="ButtonDisabledColor" Color="#FF8CE640"></SolidColorBrush>
	<SolidColorBrush x:Key="BackgroundBaseColor" Color="#FFA3B6C5"></SolidColorBrush>
	<!--SolidColorBrush x:Key="BackgroundDarkColor" Color="LightGreen"></SolidColorBrush>
	<SolidColorBrush x:Key="BackgroundLightColor" Color="LightGreen"></SolidColorBrush-->

	<LinearGradientBrush x:Key="FocusFX" StartPoint="0,0" EndPoint="1,0">
		<GradientStop Offset="0" Color="#FF90F000"></GradientStop>
		<GradientStop Offset="1" Color="#FF90F000"></GradientStop>
	</LinearGradientBrush>

	<Storyboard x:Key="FocusOut">
		<DoubleAnimation x:Name="AnimFocusOut" BeginTime="00:00:00" Storyboard.TargetName="FocusRectangle" Duration="00:00:00.250" From="1" To="0" Storyboard.TargetProperty="Opacity"></DoubleAnimation>
	</Storyboard>
	<Storyboard x:Key="FocusIn">
		<DoubleAnimation x:Name="AnimFocus" BeginTime="00:00:00" Storyboard.TargetName="FocusRectangle" Duration="00:00:00.250" From="0" To="1" Storyboard.TargetProperty="Opacity"></DoubleAnimation>
	</Storyboard>
	<Storyboard x:Key="ExitFocusOut">
		<DoubleAnimation x:Name="AnimExitFocusOut" BeginTime="00:00:00" Storyboard.TargetName="FocusRectangle" Duration="00:00:00.250" From="0.5" To="0" Storyboard.TargetProperty="Opacity"></DoubleAnimation>
	</Storyboard>
	<Storyboard x:Key="ExitFocusIn">
		<DoubleAnimation x:Name="AnimExitFocus" BeginTime="00:00:00" Storyboard.TargetName="FocusRectangle" Duration="00:00:00.250" From="0" To="0.5" Storyboard.TargetProperty="Opacity"></DoubleAnimation>
	</Storyboard>
	
	
	<Style x:Key="ExitButtonTemplate" TargetType="{x:Type Button}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate x:Name="tmpltButton">
					<Grid>
						<Border x:Name="FocusRectangle" 
                    Background="{StaticResource ExitFocusColor}" 
										Opacity="0" >
						</Border>
						<Border x:Name="Presstangle" 
                    Background="{StaticResource ExitFocusColor}" 
										Opacity="0" >
						</Border>
						<ContentPresenter x:Name="ButtonContent" 
                    Opacity="1" 
                    Content="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" 
                    HorizontalAlignment="center" 
                    VerticalAlignment="center">
						</ContentPresenter>
					</Grid>
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="Button.MouseLeave">
							<EventTrigger.Actions>
								<BeginStoryboard Storyboard="{StaticResource ExitFocusOut}"></BeginStoryboard>
							</EventTrigger.Actions>
						</EventTrigger>
						<EventTrigger RoutedEvent="Button.MouseEnter">
							<EventTrigger.Actions>
								<BeginStoryboard Storyboard="{StaticResource ExitFocusIn}"></BeginStoryboard>
							</EventTrigger.Actions>
						</EventTrigger>
						<EventTrigger RoutedEvent="Button.LostFocus">
							<EventTrigger.Actions>
								<BeginStoryboard Storyboard="{StaticResource ExitFocusOut}"></BeginStoryboard>
							</EventTrigger.Actions>
						</EventTrigger>
						<EventTrigger RoutedEvent="Button.GotFocus">
							<EventTrigger.Actions>
								<BeginStoryboard Storyboard="{StaticResource ExitFocusIn}"></BeginStoryboard>
							</EventTrigger.Actions>
						</EventTrigger>
						<Trigger Property="Button.IsPressed" Value="True">
							<Setter Property="Opacity" TargetName="Presstangle" Value="0.7"></Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style TargetType="{x:Type Button}">
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate x:Name="tmpltButton">
					<Grid>
						<Border x:Name="BaseRectangle" 
                    Background="{StaticResource ButtonBaseColor}">
						</Border>
						<Border x:Name="FocusRectangle" 
                    Background="{StaticResource FocusFX}" 
										Opacity="0" >
						</Border>
						<Border x:Name="Presstangle" 
                    Background="{StaticResource ButtonFocusColor}" 
										Opacity="0" >
						</Border>
						<ContentPresenter x:Name="ButtonContent" 
                    Opacity="1" 
                    Content="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" 
                    HorizontalAlignment="center" 
                    VerticalAlignment="center">
						</ContentPresenter>
					</Grid>
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="Button.MouseLeave">
							<EventTrigger.Actions>
								<BeginStoryboard Storyboard="{StaticResource FocusOut}"></BeginStoryboard>
							</EventTrigger.Actions>
						</EventTrigger>
						<EventTrigger RoutedEvent="Button.MouseEnter">
							<EventTrigger.Actions>
								<BeginStoryboard Storyboard="{StaticResource FocusIn}"></BeginStoryboard>
							</EventTrigger.Actions>
						</EventTrigger>
						<EventTrigger RoutedEvent="Button.LostFocus">
							<EventTrigger.Actions>
								<BeginStoryboard Storyboard="{StaticResource FocusOut}"></BeginStoryboard>
							</EventTrigger.Actions>
						</EventTrigger>
						<EventTrigger RoutedEvent="Button.GotFocus">
							<EventTrigger.Actions>
								<BeginStoryboard Storyboard="{StaticResource FocusIn}"></BeginStoryboard>
							</EventTrigger.Actions>
						</EventTrigger>
						<Trigger Property="Button.IsPressed" Value="True">
							<Setter Property="Opacity" TargetName="Presstangle" Value="1"></Setter>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" TargetName="ButtonContent" Value=".3"></Setter>
							<Setter Property="Background" TargetName="BaseRectangle" Value="{StaticResource ButtonDisabledColor}"></Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- ###########    Progressbar    ########### -->

	<LinearGradientBrush x:Key="ProgressBarBackground"
                     EndPoint="1,0"
                     StartPoint="0,0">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="#BAB2C7D6"
                      Offset="0"/>
			<GradientStop Color="#BAB2C7D6"
                      Offset="0.5"/>
			<GradientStop Color="#BAB2C7D6"
                      Offset="1"/>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
	<RadialGradientBrush x:Key="ProgressBarIndicatorLightingEffectLeft"
                     RadiusX="1"
                     RadiusY="1"
                     RelativeTransform="1,0,0,1,0.5,0.5">
		<RadialGradientBrush.GradientStops>
			<GradientStop Color="#60FFFFC4"
                      Offset="0"/>
			<GradientStop Color="#00FFFFC4"
                      Offset="1"/>
		</RadialGradientBrush.GradientStops>
	</RadialGradientBrush>
	<LinearGradientBrush x:Key="ProgressBarIndicatorLightingEffect"
                     StartPoint="0,1"
                     EndPoint="0,0">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="#60FFFFC4"
                      Offset="0"/>
			<GradientStop Color="#00FFFFC4"
                      Offset="1"/>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
	<RadialGradientBrush x:Key="ProgressBarIndicatorLightingEffectRight"
                     RadiusX="1"
                     RadiusY="1"
                     RelativeTransform="1,0,0,1,-0.5,0.5">
		<RadialGradientBrush.GradientStops>
			<GradientStop Color="#60FFFFC4"
                      Offset="0"/>
			<GradientStop Color="#00FFFFC4"
                      Offset="1"/>
		</RadialGradientBrush.GradientStops>
	</RadialGradientBrush>

	<LinearGradientBrush x:Key="ProgressBarIndicatorDarkEdgeLeft"
                     StartPoint="0,0"
                     EndPoint="1,0">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="#0C000000"
                      Offset="0"/>
			<GradientStop Color="#20000000"
                      Offset="0.3"/>
			<GradientStop Color="#00000000"
                      Offset="1"/>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="ProgressBarIndicatorDarkEdgeRight"
                     StartPoint="0,0"
                     EndPoint="1,0">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="#00000000"
                      Offset="0"/>
			<GradientStop Color="#20000000"
                      Offset="0.7"/>
			<GradientStop Color="#0C000000"
                      Offset="1"/>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill" 
                     StartPoint="0,0"
                     EndPoint="1,0">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="#00FFFFFF"
                      Offset="0"/>
			<GradientStop Color="#60FFFFFF"
                      Offset="0.4"/>
			<GradientStop Color="#60FFFFFF"
                      Offset="0.6"/>
			<GradientStop Color="#00FFFFFF"
                      Offset="1"/>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>

	<Style x:Key="{x:Type ProgressBar}"
       TargetType="{x:Type ProgressBar}">
		<Setter Property="Foreground"
            Value="#80E000"/>
		<Setter Property="Background"
            Value="{StaticResource ProgressBarBackground}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ProgressBar}">
					<Grid Name="TemplateRoot"
                      SnapsToDevicePixels="true">
						<Rectangle Fill="{TemplateBinding Background}"/>
						<Rectangle Name="PART_Track"
                               Margin="1"/>

						<Decorator x:Name="PART_Indicator"
                               HorizontalAlignment="Left"
                               Margin="1">
							<Grid Name="Foreground">
								<Rectangle x:Name="Indicator"
                                       Fill="{TemplateBinding Foreground}"/>
								<Grid x:Name="Animation" ClipToBounds="true">
									<Rectangle x:Name="PART_GlowRect" Width="200" 
                                            Fill="{StaticResource ProgressBarIndicatorAnimatedFill}"
                                            Margin="-100,0,0,0"
                                            HorizontalAlignment="Left">
									</Rectangle>
								</Grid>
								<Grid x:Name="Overlay">
									<Grid.ColumnDefinitions>
										<ColumnDefinition MaxWidth="15"/>
										<ColumnDefinition Width="0.1*"/>
										<ColumnDefinition MaxWidth="15"/>
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition />
										<RowDefinition />
									</Grid.RowDefinitions>
									<Rectangle x:Name="LeftDark"
                                           Grid.RowSpan="2"
                                           Fill="{StaticResource ProgressBarIndicatorDarkEdgeLeft}"
                                           RadiusX="1"
                                           RadiusY="1"
                                           Margin="1,1,0,1"/>
									<Rectangle x:Name="RightDark"
                                           Grid.RowSpan="2"
                                           Grid.Column="2"
                                           RadiusX="1"
                                           RadiusY="1"
                                           Fill="{StaticResource ProgressBarIndicatorDarkEdgeRight}"
                                           Margin="0,1,1,1"/>
									<Rectangle x:Name="LeftLight"
                                           Grid.Column="0"
                                           Grid.Row="2"
                                           Fill="{StaticResource ProgressBarIndicatorLightingEffectLeft}"/>
									<Rectangle x:Name="CenterLight"
                                           Grid.Column="1"
                                           Grid.Row="2"
                                           Fill="{StaticResource ProgressBarIndicatorLightingEffect}"/>
									<Rectangle x:Name="RightLight"
                                           Grid.Column="2"
                                           Grid.Row="2"
                                           Fill="{StaticResource ProgressBarIndicatorLightingEffectRight}"/>
								</Grid>
							</Grid>
						</Decorator>
					</Grid>
					<ControlTemplate.Triggers>

						<Trigger Property="IsIndeterminate"
                             Value="true">
							<Setter TargetName="LeftDark"
                                Property="Visibility"
                                Value="Collapsed"/>
							<Setter TargetName="RightDark"
                                Property="Visibility"
                                Value="Collapsed"/>
							<Setter TargetName="LeftLight"
                                Property="Visibility"
                                Value="Collapsed"/>
							<Setter TargetName="CenterLight"
                                Property="Visibility"
                                Value="Collapsed"/>
							<Setter TargetName="RightLight"
                                Property="Visibility"
                                Value="Collapsed"/>
							<Setter TargetName="Indicator"
                                Property="Visibility"
                                Value="Collapsed"/>
						</Trigger>
						<Trigger Property="IsIndeterminate"
                             Value="false">
							<Setter TargetName="Animation"
                                Property="Background"
                                Value="#80B5FFA9"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>





	<!-- ###########    ComboBox    ########### -->

	<!--Style TargetType="{x:Type ComboBox}">
		<Setter Property="Foreground" Value="Gray" />
		<Setter Property="BorderBrush" Value="Gray" />
		<Setter Property="Background" Value="White" />
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="FontSize" Value="11" />
		<Setter Property="FontWeight" Value="Bold" />
		<Setter Property="MinWidth" Value="50"/>
		<Setter Property="MinHeight" Value="32"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBox">
					<Grid>
						<ToggleButton
                                Name="ToggleButton"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                            Foreground="{TemplateBinding Foreground}"
                                Style="{StaticResource ComboBoxToggleButton}"
                                Grid.Column="2"
                                Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press">
						</ToggleButton>
						<ContentPresenter
                                Name="ContentSite"
                                IsHitTestVisible="False"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="10,3,30,3"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center" />
						<TextBox x:Name="PART_EditableTextBox"
                                Style="{x:Null}"
                                Template="{StaticResource ComboBoxTextBox}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Margin="3,3,23,3"
                                Focusable="True"                               
                                Visibility="Hidden"
                                IsReadOnly="{TemplateBinding IsReadOnly}"/>
						<Popup
                                Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True"
                                Focusable="False"
                                PopupAnimation="Slide">
							<Grid
                                  Name="DropDown"
                                  SnapsToDevicePixels="True"               
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
								<Border
                                        x:Name="DropDownBorder"
                                        Background="White"
                                        BorderThickness="2"
                                        BorderBrush="Gray"/>
								<ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
									<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
								</ScrollViewer>
							</Grid>
						</Popup>

					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="HasItems" Value="false">
							<Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
						</Trigger>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
						</Trigger>
						<Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
							<Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
							<Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
						</Trigger>
						<Trigger Property="IsEditable" Value="true">
							<Setter Property="IsTabStop" Value="false"/>
							<Setter TargetName="PART_EditableTextBox" Property="Visibility"    Value="Visible"/>
							<Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
		</Style.Triggers>
	</Style>

	<Style TargetType="{x:Type ComboBoxItem}">
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="FontSize" Value="16" />
		<Setter Property="FontWeight" Value="Bold" />
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBoxItem">
					<Border
                                  Name="Border"
                                    Padding="5"
                                    Margin="2"
                                    BorderThickness="2"
                                    CornerRadius="0"
                                    Background="Transparent"
                                    BorderBrush="Transparent" >

						<TextBlock TextAlignment="Center">
                                        <ContentPresenter />
						</TextBlock>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsHighlighted" Value="true">
							<Setter TargetName="Border" Property="BorderBrush" Value="Gray"/>
							<Setter TargetName="Border" Property="Background" Value="Yellow"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition />
							<ColumnDefinition Width="32" />
						</Grid.ColumnDefinitions>
						<Border
                          x:Name="Border"
                          Grid.ColumnSpan="2"
                          CornerRadius="0"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="2" />
						<Border
                          Grid.Column="0"
                          CornerRadius="0"
                          Background="Transparent"
                          BorderBrush="Transparent"
                          BorderThickness="10" />
						<Path
                          x:Name="Arrow"
                          Grid.Column="1"    
                          Fill="{TemplateBinding Foreground}"
                          Stroke="{TemplateBinding Foreground}"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="M 0 0 L 8 12 L 16 0 Z"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Border" Property="Background" Value="LightGray" />
							<Setter TargetName="Border" Property="BorderBrush" Value="Gray" />
							<Setter Property="Foreground" Value="Gray"/>
							<Setter TargetName="Arrow" Property="Fill" Value="Gray" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style-->

	<ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
		<Border x:Name="PART_ContentHost" Focusable="True" />
	</ControlTemplate>

</ResourceDictionary>